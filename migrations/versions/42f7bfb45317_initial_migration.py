"""Initial migration

Revision ID: 42f7bfb45317
Revises: 
Create Date: 2025-01-28 19:38:15.785576

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '42f7bfb45317'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analyse_test', schema=None) as batch_op:
        batch_op.alter_column('date_analyse',
               existing_type=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('id_utilisateur',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment="Utilisateur qui a lancé l'analyse",
               existing_nullable=True)
        batch_op.alter_column('chemin_fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Chemin du fichier analysé',
               existing_nullable=False)
        batch_op.drop_constraint('fk_analyse_utilisateur', type_='foreignkey')
        batch_op.create_foreign_key(None, 'utilisateur', ['id_utilisateur'], ['id_utilisateur'])

    with op.batch_alter_table('historique', schema=None) as batch_op:
        batch_op.alter_column('id_utilisateur',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment="Utilisateur qui a effectué l'action",
               existing_nullable=True)
        batch_op.alter_column('action',
               existing_type=mysql.TEXT(),
               comment=None,
               existing_comment="Description de l'action",
               existing_nullable=False)
        batch_op.alter_column('date_action',
               existing_type=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('current_timestamp()'))
        batch_op.drop_constraint('fk_historique_utilisateur', type_='foreignkey')
        batch_op.create_foreign_key(None, 'utilisateur', ['id_utilisateur'], ['id_utilisateur'])

    with op.batch_alter_table('rapport', schema=None) as batch_op:
        batch_op.alter_column('chemin_fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Chemin du fichier de rapport',
               existing_nullable=False)
        batch_op.alter_column('id_analyse',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='Analyse associée',
               existing_nullable=True)
        batch_op.drop_constraint('fk_rapport_analyse', type_='foreignkey')
        batch_op.create_foreign_key(None, 'analyse_test', ['id_analyse'], ['id_analyse'])

    with op.batch_alter_table('utilisateur', schema=None) as batch_op:
        batch_op.alter_column('mot_de_passe',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Mot de passe hashé',
               existing_nullable=False)
        batch_op.alter_column('date_creation',
               existing_type=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('current_timestamp()'))

    with op.batch_alter_table('vulnerabilite', schema=None) as batch_op:
        batch_op.alter_column('fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment=None,
               existing_comment='Fichier où la vulnérabilité a été détectée',
               existing_nullable=False)
        batch_op.alter_column('ligne_code',
               existing_type=mysql.INTEGER(display_width=11),
               comment=None,
               existing_comment='Ligne de code concernée',
               existing_nullable=False)
        batch_op.alter_column('id_analyse',
               existing_type=mysql.BIGINT(display_width=20),
               comment=None,
               existing_comment='Analyse associée',
               existing_nullable=True)
        batch_op.drop_constraint('fk_vulnerabilite_analyse', type_='foreignkey')
        batch_op.create_foreign_key(None, 'analyse_test', ['id_analyse'], ['id_analyse'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vulnerabilite', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_vulnerabilite_analyse', 'analyse_test', ['id_analyse'], ['id_analyse'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id_analyse',
               existing_type=mysql.BIGINT(display_width=20),
               comment='Analyse associée',
               existing_nullable=True)
        batch_op.alter_column('ligne_code',
               existing_type=mysql.INTEGER(display_width=11),
               comment='Ligne de code concernée',
               existing_nullable=False)
        batch_op.alter_column('fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment='Fichier où la vulnérabilité a été détectée',
               existing_nullable=False)

    with op.batch_alter_table('utilisateur', schema=None) as batch_op:
        batch_op.alter_column('date_creation',
               existing_type=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('mot_de_passe',
               existing_type=mysql.VARCHAR(length=255),
               comment='Mot de passe hashé',
               existing_nullable=False)

    with op.batch_alter_table('rapport', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_rapport_analyse', 'analyse_test', ['id_analyse'], ['id_analyse'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.alter_column('id_analyse',
               existing_type=mysql.BIGINT(display_width=20),
               comment='Analyse associée',
               existing_nullable=True)
        batch_op.alter_column('chemin_fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment='Chemin du fichier de rapport',
               existing_nullable=False)

    with op.batch_alter_table('historique', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_historique_utilisateur', 'utilisateur', ['id_utilisateur'], ['id_utilisateur'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.alter_column('date_action',
               existing_type=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('action',
               existing_type=mysql.TEXT(),
               comment="Description de l'action",
               existing_nullable=False)
        batch_op.alter_column('id_utilisateur',
               existing_type=mysql.BIGINT(display_width=20),
               comment="Utilisateur qui a effectué l'action",
               existing_nullable=True)

    with op.batch_alter_table('analyse_test', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_analyse_utilisateur', 'utilisateur', ['id_utilisateur'], ['id_utilisateur'], onupdate='CASCADE', ondelete='SET NULL')
        batch_op.alter_column('chemin_fichier',
               existing_type=mysql.VARCHAR(length=255),
               comment='Chemin du fichier analysé',
               existing_nullable=False)
        batch_op.alter_column('id_utilisateur',
               existing_type=mysql.BIGINT(display_width=20),
               comment="Utilisateur qui a lancé l'analyse",
               existing_nullable=True)
        batch_op.alter_column('date_analyse',
               existing_type=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('current_timestamp()'))

    # ### end Alembic commands ###
